/*
  For more information, please see: http://software.sci.utah.edu
  
  The MIT License

  Copyright (c) 2009 Scientific Computing and Imaging Institute,
  University of Utah.


  Permission is hereby granted, free of charge, to any person obtaining a 
  copy of this software and associated documentation files (the "Software"),
  to deal in the Software without restriction, including without limitation 
  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
  and/or sell copies of the Software, and to permit persons to whom the 
  Software is furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included 
  in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
  DEALINGS IN THE SOFTWARE.
*/

/////////////////////////////////////////////////////////////////////////////
// Name:        inverttool.cpp
// Purpose:     
// Author:      
// Modified by: 
// Created:     27/08/2007 09:39:40
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 27/08/2007 09:39:40

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"
#include <Applications/Seg3D/Painter.h>

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "inverttool.h"

////@begin XPM images
////@end XPM images


/*!
 * InvertTool type definition
 */

IMPLEMENT_DYNAMIC_CLASS( InvertTool, wxPanel )


/*!
 * InvertTool event table definition
 */

BEGIN_EVENT_TABLE( InvertTool, wxPanel )

////@begin InvertTool event table entries
////@end InvertTool event table entries
EVT_BUTTON( XRCID("INVERT_BUTTON"), InvertTool::OnInvertButtonClick )
EVT_BUTTON( XRCID("CLOSE_BUTTON"), InvertTool::OnCloseButtonClick )

END_EVENT_TABLE()


/*!
 * InvertTool constructors
 */

InvertTool::InvertTool()
{
    Init();
}

InvertTool::InvertTool( wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, pos, size, style);
}


/*!
 * InvertTool creator
 */

bool InvertTool::Create( wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style )
{
////@begin InvertTool creation
    SetParent(parent);
    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end InvertTool creation
    return true;
}


/*!
 * InvertTool destructor
 */

InvertTool::~InvertTool()
{
////@begin InvertTool destruction
////@end InvertTool destruction
}


/*!
 * Member initialisation
 */

void InvertTool::Init()
{
////@begin InvertTool member initialisation
////@end InvertTool member initialisation
}


/*!
 * Control creation for InvertTool
 */

void InvertTool::CreateControls()
{    
////@begin InvertTool content construction
    if (!wxXmlResource::Get()->LoadPanel(this, GetParent(), _T("ID_INVERTTOOL")))
        wxLogError(wxT("Missing wxXmlResource::Get()->Load() in OnInit()?"));
////@end InvertTool content construction

    // Create custom windows not generated automatically here.
////@begin InvertTool content initialisation
////@end InvertTool content initialisation
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for INVERT_BUTTON
 */
void InvertTool::OnInvertButtonClick( wxCommandEvent& event )
{
  wxBeginBusyCursor();
  SCIRun::Painter::ThrowSkinnerSignal("Painter::InvertVolume");
  wxEndBusyCursor();
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for CLOSE_BUTTON
 */
void InvertTool::OnCloseButtonClick( wxCommandEvent& event )
{
  SCIRun::Painter::global_seg3dframe_pointer_->HideTool();
}

/*!
 * Should we show tooltips?
 */

bool InvertTool::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap InvertTool::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin InvertTool bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end InvertTool bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon InvertTool::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin InvertTool icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end InvertTool icon retrieval
}
