// ******************************************************************
// VISPack. Copyright (c) 1994-2000 Ross Whitaker rtw@utk.edu       *
// For conditions of distribution and use, see the file LICENSE.txt *
// accompanying this distribution.                                  *
// ******************************************************************

// $Id: mathutil.h,v 1.3 2003/04/30 01:32:13 whitaker Exp $

#ifndef	MATH_MATHUTIL_H
#define	MATH_MATHUTIL_H

#ifdef _WIN32
# ifndef _USE_MATH_DEFINES
#  define _USE_MATH_DEFINES
# endif //_USE_MATH_DEFINES
#endif //_WIN32
#include <math.h>

#include <stdlib.h>
#include <limits.h>
#include <float.h>
#include "util/defs.h"

#include "util/utilExports.h"

// ---------------------------------------------------------------------------

const VISReal half_pi = static_cast<float>(M_PI) / 2.0f;
const VISReal one_and_a_half_pi = 1.5f * static_cast<float>(M_PI);
const VISReal two_pi = 2.0f * static_cast<float>(M_PI);


float gaussFast(float);
float gaussCumFast(float);
float cosFast(float);
float acosFast(float);

// ---------------------------------------------------------------------------
// min, max, and abs functions -- done "correctly" as an inline (i.e. typed) function

template <class T> 
inline T tabs(const T& a)
{
    return (a < static_cast<T>(0) ? (a * static_cast<T>(-1)) : a);
}

template <class T> 
inline T tsign(const T& a)
{
    return (a < static_cast<T>(0) ? (-1) : 1);
}

//returns a^n
template <class T>
T power(T a, int n)
{
    T total = 1.0;
    int i;
    if (n == 0) return(1);
    if (n >= 0)
	for (i = 0; i < n; i++)
	    {
		total *= a;
	    }
    else
	for (i = 0; i < -n; i++)
	    {
		total /= a;
	    }
    return(total);
}

/*{
    float total = 1.0f;
    int i;
    if (n >= 0)
	for (i = 0; i < n; i++)
	    {
		total *= a;
	    }
    else
	for (i = 0; i < n; i++)
	    {
		total /= a;
	    }
    return(total);
    }*/

// This needs to be changed 3-14-00 to prevent clashes with std functions 
// by the same name for the same purpose -  RTW

// CHANGED 6/28/00 to VISMin to avoid STL clashes. --JC
template <class T> inline const T& VISmin(const T& a, const T& b)
{
    return (a < b ? a : b);
}

template <class T> inline const T& VISmin(const T& a,const T& b,const T& c)
{
    return VISmin(a,VISmin(b,c));
}

template <class T> inline const T& VISmin(const T& a,const T& b,
				       const T& c,const T& d)
{
    return VISmin(VISmin(a,b),VISmin(c,d));
}

template <class T> inline const T& VISmin(const T& a,const T& b,
				       const T& c,const T& d,
				       const T& e,const T& f)
{
    return VISmin(VISmin(a,b,c,d),VISmin(e,f));
}

// ---------------------------------------------------------------------------
// max function -- done "correctly" as an inline (i.e. typed) function

// CHANGED 6/28/00 to VISMax to avoid STL clashes. --JC

template <class T> inline const T& VISmax(const T& a,const T& b)
{
    return (a > b ? a : b);
}

template <class T> inline const T& VISmax(const T& a,const T& b,const T& c)
{
    return VISmax(a,VISmax(b,c));
}

template <class T> inline const T& VISMaxAbs(const T& a,const T& b)
{
    return (tabs(a) > tabs(b) ? a : b);
}

template <class T> inline const T& VISmax(const T& a,const T& b,
				       const T& c,const T& d)
{
    return VISmax(VISmax(a,b),VISmax(c,d));
}

template <class T> inline const T& VISmax(const T& a,const T& b,
				       const T& c,const T& d,
				       const T& e,const T& f)
{
    return VISmax(VISmax(a,b,c,d),VISmax(e,f));
}

// ---------------------------------------------------------------------------

inline VISReal rad_to_deg(VISReal radians)
{
    return (static_cast<VISReal>( radians * 180.0f / M_PI ));
}

// ---------------------------------------------------------------------------

inline VISReal deg_to_rad(VISReal degrees)
{
    return (static_cast<VISReal>( degrees * M_PI / 180.0f ));
}


// ---------------------------------------------------------------------------

// returns a uniformly distributed deviate on the 0-1.0 interval
util_SHARE float rand1();

// returns a normally distributed deviate with zero mean an unit variance, 
// using ran1() as the source of uniform deviates
util_SHARE float gasdev();
// returns a MEAN=1 gamma dist of order ia                                           
util_SHARE float gamdev(int ia);                                                                


// ---------------------------------------------------------------------------
// Simple square routine - inline so should work ok
// Its templated so you can use any type you want -- VISReal or double or
// float or int.

template <class T> inline T sqr(T x) { return x*x; }

// ---------------------------------------------------------------------------

template <class T> inline T cub(T x) { return x*x*x; }

// ---------------------------------------------------------------------------

#define DELTA_GAUSS (0.01f)
const float _GAUSS_TABLE[512]
=
{
1.0f,
0.99995f,
0.99980002f,
0.9995501f,
0.99920032f,
0.99875078f,
0.99820162f,
0.997553f,
0.99680511f,
0.99595819f,
0.99501248f,
0.99396826f,
0.99282586f,
0.9915856f,
0.99024786f,
0.98881304f,
0.98728157f,
0.9856539f,
0.98393051f,
0.98211193f,
0.98019867f,
0.97819132f,
0.97609047f,
0.97389674f,
0.97161077f,
0.96923323f,
0.96676484f,
0.9642063f,
0.96155838f,
0.95882184f,
0.95599748f,
0.95308613f,
0.95008863f,
0.94700586f,
0.9438387f,
0.94058806f,
0.9372549f,
0.93384015f,
0.93034481f,
0.92676987f,
0.92311635f,
0.91938529f,
0.91557774f,
0.91169479f,
0.90773754f,
0.90370708f,
0.89960455f,
0.8954311f,
0.89118789f,
0.88687609f,
0.8824969f,
0.87805153f,
0.87354119f,
0.86896711f,
0.86433055f,
0.85963276f,
0.85487502f,
0.85005859f,
0.84518478f,
0.84025488f,
0.83527021f,
0.83023208f,
0.82514182f,
0.82000077f,
0.81481026f,
0.80957165f,
0.80428628f,
0.79895552f,
0.79358073f,
0.78816328f,
0.78270454f,
0.77720588f,
0.77166867f,
0.76609431f,
0.76048416f,
0.7548396f,
0.74916202f,
0.7434528f,
0.73771331f,
0.73194493f,
0.72614904f,
0.720327f,
0.7144802f,
0.70860998f,
0.70271772f,
0.69680478f,
0.69087249f,
0.68492222f,
0.67895529f,
0.67297305f,
0.66697681f,
0.6609679f,
0.65494763f,
0.6489173f,
0.6428782f,
0.63683161f,
0.63077882f,
0.62472108f,
0.61865965f,
0.61259576f,
0.60653066f,
0.60046555f,
0.59440166f,
0.58834016f,
0.58228224f,
0.57622907f,
0.57018181f,
0.5641416f,
0.55810956f,
0.5520868f,
0.54607443f,
0.54007352f,
0.53408515f,
0.52811036f,
0.5221502f,
0.51620567f,
0.5102778f,
0.50436756f,
0.49847592f,
0.49260384f,
0.48675226f,
0.48092209f,
0.47511424f,
0.46932959f,
0.46356902f,
0.45783336f,
0.45212346f,
0.44644012f,
0.44078414f,
0.4351563f,
0.42955736f,
0.42398805f,
0.41844911f,
0.41294123f,
0.4074651f,
0.40202138f,
0.39661073f,
0.39123378f,
0.38589113f,
0.38058338f,
0.3753111f,
0.37007485f,
0.36487516f,
0.35971256f,
0.35458755f,
0.3495006f,
0.34445218f,
0.33944274f,
0.33447271f,
0.32954248f,
0.32465247f,
0.31980303f,
0.31499453f,
0.31022731f,
0.30550168f,
0.30081795f,
0.29617642f,
0.29157734f,
0.28702097f,
0.28250755f,
0.2780373f,
0.27361042f,
0.2692271f,
0.26488752f,
0.26059182f,
0.25634015f,
0.25213264f,
0.24796938f,
0.24385049f,
0.23977603f,
0.23574608f,
0.23176068f,
0.22781987f,
0.22392368f,
0.22007211f,
0.21626517f,
0.21250282f,
0.20878506f,
0.20511182f,
0.20148305f,
0.1978987f,
0.19435867f,
0.19086288f,
0.18741123f,
0.18400359f,
0.18063985f,
0.17731987f,
0.1740435f,
0.17081059f,
0.16762097f,
0.16447446f,
0.16137087f,
0.15831002f,
0.1552917f,
0.15231569f,
0.14938178f,
0.14648972f,
0.1436393f,
0.14083025f,
0.13806233f,
0.13533528f,
0.13264883f,
0.13000271f,
0.12739663f,
0.12483031f,
0.12230345f,
0.11981577f,
0.11736694f,
0.11495667f,
0.11258464f,
0.11025053f,
0.10795401f,
0.10569476f,
0.10347244f,
0.10128672f,
0.09913725f,
0.0970237f,
0.09494571f,
0.09290294f,
0.09089503f,
0.08892162f,
0.08698235f,
0.08507688f,
0.08320482f,
0.08136582f,
0.07955951f,
0.07778552f,
0.07604348f,
0.07433302f,
0.07265377f,
0.07100535f,
0.0693874f,
0.06779953f,
0.06624138f,
0.06471256f,
0.0632127f,
0.06174144f,
0.06029838f,
0.05888317f,
0.05749542f,
0.05613476f,
0.05480083f,
0.05349324f,
0.05221163f,
0.05095563f,
0.04972487f,
0.04851899f,
0.04733762f,
0.04618039f,
0.04504695f,
0.04393693f,
0.04284998f,
0.04178575f,
0.04074387f,
0.03972399f,
0.03872577f,
0.03774886f,
0.03679291f,
0.03585759f,
0.03494255f,
0.03404745f,
0.03317197f,
0.03231577f,
0.03147852f,
0.03065989f,
0.02985957f,
0.02907723f,
0.02831255f,
0.02756523f,
0.02683495f,
0.02612141f,
0.0254243f,
0.02474331f,
0.02407816f,
0.02342855f,
0.02279418f,
0.02217477f,
0.02157004f,
0.0209797f,
0.02040348f,
0.01984109f,
0.01929229f,
0.01875678f,
0.01823432f,
0.01772463f,
0.01722747f,
0.01674258f,
0.01626971f,
0.01580862f,
0.01535906f,
0.01492079f,
0.01449357f,
0.01407718f,
0.01367139f,
0.01327597f,
0.01289069f,
0.01251534f,
0.01214971f,
0.01179358f,
0.01144674f,
0.011109f,
0.01078014f,
0.01045997f,
0.01014829f,
0.00984492f,
0.00954966f,
0.00926233f,
0.00898274f,
0.00871073f,
0.0084461f,
0.0081887f,
0.00793835f,
0.00769488f,
0.00745813f,
0.00722795f,
0.00700417f,
0.00678664f,
0.0065752f,
0.00636972f,
0.00617004f,
0.00597602f,
0.00578753f,
0.00560442f,
0.00542656f,
0.00525382f,
0.00508607f,
0.00492318f,
0.00476504f,
0.00461151f,
0.00446248f,
0.00431784f,
0.00417747f,
0.00404125f,
0.00390909f,
0.00378087f,
0.0036565f,
0.00353586f,
0.00341885f,
0.00330539f,
0.00319538f,
0.00308872f,
0.00298532f,
0.00288509f,
0.00278795f,
0.00269381f,
0.00260259f,
0.0025142f,
0.00242858f,
0.00234563f,
0.0022653f,
0.00218749f,
0.00211215f,
0.0020392f,
0.00196857f,
0.00190019f,
0.00183401f,
0.00176996f,
0.00170797f,
0.00164799f,
0.00158995f,
0.00153381f,
0.0014795f,
0.00142697f,
0.00137617f,
0.00132705f,
0.00127955f,
0.00123362f,
0.00118923f,
0.00114632f,
0.00110485f,
0.00106477f,
0.00102604f,
0.00098862f,
0.00095247f,
0.00091755f,
0.00088383f,
0.00085125f,
0.0008198f,
0.00078943f,
0.00076011f,
0.0007318f,
0.00070448f,
0.00067811f,
0.00065266f,
0.00062811f,
0.00060441f,
0.00058156f,
0.00055951f,
0.00053824f,
0.00051773f,
0.00049796f,
0.00047889f,
0.0004605f,
0.00044277f,
0.00042569f,
0.00040922f,
0.00039335f,
0.00037806f,
0.00036333f,
0.00034914f,
0.00033546f,
0.00032229f,
0.00030961f,
0.00029739f,
0.00028563f,
0.00027431f,
0.00026341f,
0.00025292f,
0.00024282f,
0.0002331f,
0.00022375f,
0.00021475f,
0.00020609f,
0.00019776f,
0.00018975f,
0.00018205f,
0.00017464f,
0.00016751f,
0.00016066f,
0.00015408f,
0.00014775f,
0.00014166f,
0.00013582f,
0.0001302f,
0.0001248f,
0.00011961f,
0.00011463f,
0.00010984f,
0.00010525f,
0.00010083f,
9.6593E-05f,
9.2523E-05f,
8.8616E-05f,
8.4865E-05f,
8.1265E-05f,
7.7809E-05f,
7.4493E-05f,
7.1312E-05f,
6.8259E-05f,
6.5331E-05f,
6.2522E-05f,
5.9827E-05f,
5.7243E-05f,
5.4766E-05f,
5.239E-05f,
5.0112E-05f,
4.7929E-05f,
4.5836E-05f,
4.383E-05f,
4.1907E-05f,
4.0065E-05f,
3.83E-05f,
3.661E-05f,
3.499E-05f,
3.3439E-05f,
3.1953E-05f,
3.053E-05f,
2.9168E-05f,
2.7863E-05f,
2.6615E-05f,
2.5419E-05f,
2.4275E-05f,
2.318E-05f,
2.2133E-05f,
2.113E-05f,
2.0171E-05f,
1.9254E-05f,
1.8376E-05f,
1.7537E-05f,
1.6734E-05f,
1.5967E-05f,
1.5233E-05f,
1.4531E-05f,
1.3861E-05f,
1.322E-05f,
1.2607E-05f,
1.2022E-05f,
1.1462E-05f,
1.0928E-05f,
1.0417E-05f,
9.9295E-06f,
9.4637E-06f,
9.0188E-06f,
8.594E-06f,
8.1883E-06f,
7.8011E-06f,
7.4314E-06f,
7.0785E-06f,
6.7417E-06f,
6.4203E-06f,
6.1136E-06f,
5.8209E-06f,
5.5418E-06f,
5.2754E-06f,
5.0214E-06f,
4.7791E-06f,
4.5481E-06f,
4.3278E-06f,
4.1178E-06f,
3.9175E-06f,
3.7267E-06f,
3.5447E-06f,
3.3713E-06f,
3.2061E-06f,
3.0487E-06f,
2.8987E-06f,
2.7558E-06f,
2.6197E-06f,
2.4901E-06f,
2.3666E-06f,
2.2491E-06f,
0.0f
};

const float _GAUSSCUM_TABLE[512]
=
{
0.5f,
0.50398937f,
0.50797834f,
0.51196651f,
0.51595348f,
0.51993886f,
0.52392225f,
0.52790325f,
0.53188147f,
0.5358565f,
0.53982796f,
0.54379544f,
0.54775857f,
0.55171694f,
0.55567017f,
0.559617f,
0.563559f,
0.56749514f,
0.57142393f,
0.57534566f,
0.57925995f,
0.58316642f,
0.58706469f,
0.5909544f,
0.59483517f,
0.59870663f,
0.60256843f,
0.60642021f,
0.6102616f,
0.61409224f,
0.6179118f,
0.62171991f,
0.62551624f,
0.62930044f,
0.63307217f,
0.6368311f,
0.6405769f,
0.64430923f,
0.64802779f,
0.65173224f,
0.65542227f,
0.65909757f,
0.66275783f,
0.66640275f,
0.67003204f,
0.67364539f,
0.67724251f,
0.68082313f,
0.68438696f,
0.68793373f,
0.69146315f,
0.69497498f,
0.69846894f,
0.70194478f,
0.70540225f,
0.7088411f,
0.71226108f,
0.71566197f,
0.71904353f,
0.72240554f,
0.72574776f,
0.72907f,
0.73237203f,
0.73565365f,
0.73891466f,
0.74215487f,
0.74537409f,
0.74857213f,
0.75174882f,
0.75490397f,
0.75803744f,
0.76114904f,
0.76423864f,
0.76730606f,
0.77035118f,
0.77337385f,
0.77637393f,
0.7793513f,
0.78230583f,
0.78523741f,
0.78814592f,
0.79103126f,
0.79389331f,
0.796732f,
0.79954722f,
0.8023389f,
0.80510695f,
0.80785129f,
0.81057186f,
0.8132686f,
0.81594144f,
0.81859034f,
0.82121524f,
0.8238161f,
0.82639289f,
0.82894557f,
0.83147412f,
0.83397851f,
0.83645872f,
0.83891475f,
0.84134658f,
0.84375422f,
0.84613766f,
0.84849691f,
0.85083199f,
0.85314292f,
0.8554297f,
0.85769237f,
0.85993097f,
0.86214551f,
0.86433605f,
0.86650263f,
0.86864529f,
0.87076409f,
0.87285908f,
0.87493032f,
0.87697788f,
0.87900183f,
0.88100223f,
0.88297918f,
0.88493273f,
0.88686298f,
0.88877002f,
0.89065393f,
0.89251482f,
0.89435277f,
0.89616789f,
0.89796029f,
0.89973007f,
0.90147733f,
0.90320221f,
0.9049048f,
0.90658524f,
0.90824364f,
0.90988014f,
0.91149485f,
0.9130879f,
0.91465944f,
0.9162096f,
0.91773851f,
0.91924632f,
0.92073317f,
0.9221992f,
0.92364456f,
0.9250694f,
0.92647387f,
0.92785812f,
0.92922231f,
0.93056659f,
0.93189112f,
0.93319607f,
0.93448158f,
0.93574784f,
0.93699499f,
0.9382232f,
0.93943265f,
0.94062349f,
0.94179591f,
0.94295006f,
0.94408611f,
0.94520425f,
0.94630464f,
0.94738746f,
0.94845287f,
0.94950107f,
0.95053221f,
0.95154648f,
0.95254405f,
0.9535251f,
0.9544898f,
0.95543834f,
0.95637089f,
0.95728763f,
0.95818874f,
0.9590744f,
0.95994477f,
0.96080005f,
0.96164041f,
0.96246602f,
0.96327707f,
0.96407373f,
0.96485618f,
0.96562459f,
0.96637915f,
0.96712002f,
0.96784739f,
0.96856143f,
0.9692623f,
0.96995019f,
0.97062528f,
0.97128772f,
0.97193769f,
0.97257537f,
0.97320092f,
0.97381452f,
0.97441632f,
0.97500651f,
0.97558524f,
0.97615268f,
0.976709f,
0.97725435f,
0.97778891f,
0.97831283f,
0.97882627f,
0.9793294f,
0.97982236f,
0.98030533f,
0.98077844f,
0.98124187f,
0.98169575f,
0.98214025f,
0.98257551f,
0.98300168f,
0.98341891f,
0.98382735f,
0.98422715f,
0.98461843f,
0.98500136f,
0.98537607f,
0.9857427f,
0.98610139f,
0.98645227f,
0.98679548f,
0.98713116f,
0.98745943f,
0.98778043f,
0.9880943f,
0.98840114f,
0.9887011f,
0.9889943f,
0.98928087f,
0.98956091f,
0.98983456f,
0.99010194f,
0.99036316f,
0.99061833f,
0.99086759f,
0.99111102f,
0.99134876f,
0.9915809f,
0.99180756f,
0.99202885f,
0.99224487f,
0.99245572f,
0.99266151f,
0.99286234f,
0.99305831f,
0.99324952f,
0.99343607f,
0.99361804f,
0.99379554f,
0.99396866f,
0.99413748f,
0.99430211f,
0.99446262f,
0.99461911f,
0.99477165f,
0.99492034f,
0.99506526f,
0.99520649f,
0.99534411f,
0.99547819f,
0.99560882f,
0.99573607f,
0.99586002f,
0.99598074f,
0.99609831f,
0.99621278f,
0.99632424f,
0.99643276f,
0.99653839f,
0.99664121f,
0.99674128f,
0.99683867f,
0.99693343f,
0.99702563f,
0.99711534f,
0.9972026f,
0.99728747f,
0.99737002f,
0.9974503f,
0.99752836f,
0.99760425f,
0.99767804f,
0.99774977f,
0.99781949f,
0.99788725f,
0.9979531f,
0.99801709f,
0.99807926f,
0.99813966f,
0.99819834f,
0.99825533f,
0.99831068f,
0.99836443f,
0.99841663f,
0.9984673f,
0.9985165f,
0.99856427f,
0.99861062f,
0.99865562f,
0.99869928f,
0.99874165f,
0.99878276f,
0.99882264f,
0.99886132f,
0.99889885f,
0.99893524f,
0.99897054f,
0.99900476f,
0.99903794f,
0.99907011f,
0.99910129f,
0.99913152f,
0.99916082f,
0.99918921f,
0.99921671f,
0.99924337f,
0.99926919f,
0.9992942f,
0.99931843f,
0.9993419f,
0.99936462f,
0.99938662f,
0.99940793f,
0.99942855f,
0.99944852f,
0.99946784f,
0.99948655f,
0.99950465f,
0.99952216f,
0.99953911f,
0.9995555f,
0.99957136f,
0.9995867f,
0.99960154f,
0.99961588f,
0.99962976f,
0.99964317f,
0.99965614f,
0.99966867f,
0.99968079f,
0.9996925f,
0.99970381f,
0.99971475f,
0.99972531f,
0.99973552f,
0.99974538f,
0.9997549f,
0.9997641f,
0.99977298f,
0.99978156f,
0.99978984f,
0.99979783f,
0.99980555f,
0.999813f,
0.99982019f,
0.99982713f,
0.99983382f,
0.99984028f,
0.99984651f,
0.99985252f,
0.99985832f,
0.99986391f,
0.9998693f,
0.9998745f,
0.99987952f,
0.99988435f,
0.99988901f,
0.9998935f,
0.99989783f,
0.999902f,
0.99990602f,
0.99990989f,
0.99991362f,
0.99991721f,
0.99992067f,
0.99992401f,
0.99992722f,
0.99993031f,
0.99993328f,
0.99993615f,
0.9999389f,
0.99994156f,
0.99994411f,
0.99994657f,
0.99994894f,
0.99995121f,
0.9999534f,
0.99995551f,
0.99995754f,
0.99995949f,
0.99996136f,
0.99996316f,
0.99996489f,
0.99996656f,
0.99996816f,
0.9999697f,
0.99997118f,
0.9999726f,
0.99997396f,
0.99997528f,
0.99997654f,
0.99997775f,
0.99997891f,
0.99998003f,
0.9999811f,
0.99998213f,
0.99998312f,
0.99998407f,
0.99998498f,
0.99998585f,
0.99998669f,
0.9999875f,
0.99998827f,
0.99998901f,
0.99998973f,
0.99999041f,
0.99999106f,
0.99999169f,
0.99999229f,
0.99999287f,
0.99999342f,
0.99999395f,
0.99999446f,
0.99999495f,
0.99999542f,
0.99999586f,
0.99999629f,
0.9999967f,
0.9999971f,
0.99999748f,
0.99999784f,
0.99999818f,
0.99999851f,
0.99999883f,
0.99999914f,
0.99999943f,
0.99999971f,
0.99999997f,
1.00000023f,
1.00000047f,
1.0000007f,
1.00000093f,
1.00000114f,
1.00000135f,
1.00000154f,
1.00000173f,
1.00000191f,
1.00000208f,
1.00000224f,
1.0000024f,
1.00000255f,
1.00000269f,
1.00000283f,
1.00000296f,
1.00000308f,
1.0000032f,
1.00000331f,
1.00000342f,
1.00000353f,
1.00000363f,
1.00000372f,
1.00000381f,
1.0000039f,
1.00000398f,
1.00000406f,
1.00000413f,
1.00000421f,
1.00000427f,
1.00000434f,
1.0000044f,
1.00000446f,
1.00000452f,
1.00000457f,
1.00000462f,
1.00000467f,
1.00000472f,
1.00000476f,
1.00000481f,
1.00000485f,
1.00000489f,
1.00000492f,
1.00000496f,
1.00000499f,
1.00000502f,
1.00000505f,
1.00000508f,
1.00000511f,
1.00000514f,
1.00000516f,
1.00000518f,
1.00000521f,
1.00000523f,
1.00000525f,
1.00000527f,
1.00000529f,
1.00000531f,
1.00000532f,
1.00000534f,
1.00000535f,
1.00000537f,
1.00000538f,
1.00000539f,
1.00000541f,
1.00000542f,
1.00000543f,
1.00000544f,
1.00000545f,
1.00000546f,
1.00000547f,
1.00000548f
};


#define DELTA_COS (0.003074f)
const float _COS_TABLE[512]
=
{
1.0f,
0.99999528f,
0.9999811f,
0.99995748f,
0.99992441f,
0.99988188f,
0.99982991f,
0.9997685f,
0.99969763f,
0.99961732f,
0.99952756f,
0.99942836f,
0.99931971f,
0.99920163f,
0.99907409f,
0.99893712f,
0.99879071f,
0.99863486f,
0.99846958f,
0.99829485f,
0.9981107f,
0.99791711f,
0.9977141f,
0.99750165f,
0.99727979f,
0.99704849f,
0.99680778f,
0.99655764f,
0.99629809f,
0.99602913f,
0.99575075f,
0.99546296f,
0.99516577f,
0.99485917f,
0.99454317f,
0.99421778f,
0.99388299f,
0.9935388f,
0.99318523f,
0.99282228f,
0.99244994f,
0.99206822f,
0.99167713f,
0.99127667f,
0.99086684f,
0.99044765f,
0.9900191f,
0.9895812f,
0.98913394f,
0.98867734f,
0.98821139f,
0.98773611f,
0.98725149f,
0.98675754f,
0.98625427f,
0.98574168f,
0.98521977f,
0.98468856f,
0.98414804f,
0.98359822f,
0.98303911f,
0.9824707f,
0.98189302f,
0.98130605f,
0.98070981f,
0.98010431f,
0.97948954f,
0.97886552f,
0.97823225f,
0.97758973f,
0.97693798f,
0.97627699f,
0.97560678f,
0.97492735f,
0.97423871f,
0.97354086f,
0.97283381f,
0.97211757f,
0.97139215f,
0.97065754f,
0.96991376f,
0.96916082f,
0.96839872f,
0.96762747f,
0.96684707f,
0.96605754f,
0.96525888f,
0.9644511f,
0.9636342f,
0.9628082f,
0.9619731f,
0.96112891f,
0.96027564f,
0.9594133f,
0.95854189f,
0.95766142f,
0.9567719f,
0.95587334f,
0.95496575f,
0.95404913f,
0.9531235f,
0.95218887f,
0.95124523f,
0.95029261f,
0.949331f,
0.94836043f,
0.94738089f,
0.9463924f,
0.94539497f,
0.94438861f,
0.94337332f,
0.94234912f,
0.94131601f,
0.94027401f,
0.93922312f,
0.93816336f,
0.93709473f,
0.93601725f,
0.93493092f,
0.93383576f,
0.93273177f,
0.93161897f,
0.93049737f,
0.92936697f,
0.92822779f,
0.92707984f,
0.92592313f,
0.92475767f,
0.92358347f,
0.92240055f,
0.92120891f,
0.92000856f,
0.91879952f,
0.9175818f,
0.9163554f,
0.91512035f,
0.91387665f,
0.91262432f,
0.91136336f,
0.91009379f,
0.90881562f,
0.90752886f,
0.90623352f,
0.90492963f,
0.90361718f,
0.90229619f,
0.90096668f,
0.89962865f,
0.89828212f,
0.8969271f,
0.89556361f,
0.89419166f,
0.89281125f,
0.89142241f,
0.89002515f,
0.88861947f,
0.8872054f,
0.88578295f,
0.88435212f,
0.88291294f,
0.88146541f,
0.88000956f,
0.87854539f,
0.87707292f,
0.87559216f,
0.87410312f,
0.87260583f,
0.87110029f,
0.86958652f,
0.86806453f,
0.86653434f,
0.86499596f,
0.86344941f,
0.8618947f,
0.86033184f,
0.85876086f,
0.85718176f,
0.85559456f,
0.85399927f,
0.85239592f,
0.85078451f,
0.84916506f,
0.84753758f,
0.8459021f,
0.84425862f,
0.84260717f,
0.84094775f,
0.83928039f,
0.8376051f,
0.83592189f,
0.83423078f,
0.83253179f,
0.83082494f,
0.82911023f,
0.82738769f,
0.82565733f,
0.82391916f,
0.82217322f,
0.8204195f,
0.81865803f,
0.81688882f,
0.8151119f,
0.81332727f,
0.81153496f,
0.80973498f,
0.80792734f,
0.80611207f,
0.80428919f,
0.8024587f,
0.80062064f,
0.798775f,
0.79692182f,
0.79506111f,
0.79319289f,
0.79131717f,
0.78943397f,
0.78754331f,
0.78564521f,
0.78373969f,
0.78182676f,
0.77990644f,
0.77797876f,
0.77604372f,
0.77410135f,
0.77215166f,
0.77019468f,
0.76823042f,
0.7662589f,
0.76428014f,
0.76229416f,
0.76030097f,
0.7583006f,
0.75629306f,
0.75427838f,
0.75225657f,
0.75022765f,
0.74819165f,
0.74614857f,
0.74409844f,
0.74204128f,
0.73997711f,
0.73790595f,
0.73582781f,
0.73374272f,
0.7316507f,
0.72955176f,
0.72744593f,
0.72533322f,
0.72321366f,
0.72108727f,
0.71895406f,
0.71681406f,
0.71466729f,
0.71251376f,
0.7103535f,
0.70818653f,
0.70601287f,
0.70383253f,
0.70164554f,
0.69945193f,
0.6972517f,
0.69504488f,
0.6928315f,
0.69061157f,
0.68838511f,
0.68615215f,
0.68391271f,
0.6816668f,
0.67941445f,
0.67715569f,
0.67489052f,
0.67261897f,
0.67034107f,
0.66805684f,
0.66576629f,
0.66346945f,
0.66116634f,
0.65885699f,
0.65654141f,
0.65421962f,
0.65189165f,
0.64955752f,
0.64721726f,
0.64487088f,
0.6425184f,
0.64015986f,
0.63779526f,
0.63542464f,
0.63304801f,
0.6306654f,
0.62827683f,
0.62588233f,
0.62348191f,
0.62107559f,
0.61866341f,
0.61624539f,
0.61382154f,
0.61139189f,
0.60895646f,
0.60651528f,
0.60406837f,
0.60161575f,
0.59915744f,
0.59669347f,
0.59422387f,
0.59174865f,
0.58926784f,
0.58678145f,
0.58428953f,
0.58179208f,
0.57928914f,
0.57678072f,
0.57426685f,
0.57174755f,
0.56922286f,
0.56669278f,
0.56415735f,
0.56161659f,
0.55907052f,
0.55651916f,
0.55396255f,
0.55140071f,
0.54883365f,
0.54626141f,
0.543684f,
0.54110146f,
0.5385138f,
0.53592106f,
0.53332325f,
0.5307204f,
0.52811254f,
0.52549969f,
0.52288187f,
0.52025911f,
0.51763143f,
0.51499887f,
0.51236143f,
0.50971916f,
0.50707207f,
0.50442018f,
0.50176353f,
0.49910214f,
0.49643603f,
0.49376523f,
0.49108977f,
0.48840966f,
0.48572494f,
0.48303563f,
0.48034176f,
0.47764335f,
0.47494042f,
0.472233f,
0.46952113f,
0.46680481f,
0.46408409f,
0.46135898f,
0.45862951f,
0.4558957f,
0.45315759f,
0.4504152f,
0.44766855f,
0.44491767f,
0.44216258f,
0.43940332f,
0.43663991f,
0.43387237f,
0.43110072f,
0.42832501f,
0.42554525f,
0.42276147f,
0.41997369f,
0.41718194f,
0.41438625f,
0.41158665f,
0.40878315f,
0.4059758f,
0.40316461f,
0.4003496f,
0.39753082f,
0.39470828f,
0.391882f,
0.38905203f,
0.38621838f,
0.38338108f,
0.38054016f,
0.37769564f,
0.37484755f,
0.37199592f,
0.36914077f,
0.36628214f,
0.36342004f,
0.36055451f,
0.35768558f,
0.35481326f,
0.35193759f,
0.3490586f,
0.34617631f,
0.34329074f,
0.34040193f,
0.33750991f,
0.3346147f,
0.33171632f,
0.32881481f,
0.32591019f,
0.3230025f,
0.32009175f,
0.31717797f,
0.3142612f,
0.31134146f,
0.30841878f,
0.30549318f,
0.3025647f,
0.29963335f,
0.29669918f,
0.2937622f,
0.29082245f,
0.28787994f,
0.28493472f,
0.28198681f,
0.27903623f,
0.27608301f,
0.27312719f,
0.27016878f,
0.26720782f,
0.26424434f,
0.26127836f,
0.25830991f,
0.25533902f,
0.25236571f,
0.24939002f,
0.24641198f,
0.24343161f,
0.24044893f,
0.23746399f,
0.2344768f,
0.23148739f,
0.2284958f,
0.22550205f,
0.22250617f,
0.21950818f,
0.21650812f,
0.21350601f,
0.21050189f,
0.20749578f,
0.20448771f,
0.2014777f,
0.19846579f,
0.19545201f,
0.19243638f,
0.18941893f,
0.18639969f,
0.18337869f,
0.18035595f,
0.17733151f,
0.1743054f,
0.17127764f,
0.16824826f,
0.16521729f,
0.16218476f,
0.1591507f,
0.15611513f,
0.15307809f,
0.1500396f,
0.14699969f,
0.1439584f,
0.14091574f,
0.13787176f,
0.13482647f,
0.1317799f,
0.12873209f,
0.12568307f,
0.12263285f,
0.11958148f,
0.11652898f,
0.11347537f,
0.1104207f,
0.10736498f,
0.10430825f,
0.10125053f,
0.09819185f,
0.09513225f,
0.09207174f,
0.08901037f,
0.08594816f,
0.08288513f,
0.07982132f,
0.07675676f,
0.07369147f,
0.07062548f,
0.06755883f,
0.06449154f,
0.06142364f,
0.05835516f,
0.05528612f,
0.05221657f,
0.04914652f,
0.04607601f,
0.04300506f,
0.03993371f,
0.03686197f,
0.03378989f,
0.03071749f,
0.0276448f,
0.02457185f,
0.02149867f,
0.01842528f,
0.01535172f,
0.01227802f,
0.0092042f,
0.00613029f,
0.00305632f,
0.00f
};

#define DELTA_ACOS (0.00195695f)
const float _ACOS_TABLE[512]
=
{
0.0f,
0.06257133f,
0.08850367f,
0.10841213f,
0.12520401f,
0.14000525f,
0.15339317f,
0.16571071f,
0.17718125f,
0.18795994f,
0.1981597f,
0.2078658f,
0.21714446f,
0.22604831f,
0.23462005f,
0.24289485f,
0.2509021f,
0.25866665f,
0.26620975f,
0.27354972f,
0.28070252f,
0.2876821f,
0.29450079f,
0.30116953f,
0.30769808f,
0.31409517f,
0.3203687f,
0.32652579f,
0.33257291f,
0.33851597f,
0.34436036f,
0.35011102f,
0.35577251f,
0.36134903f,
0.36684445f,
0.37226238f,
0.37760615f,
0.38287888f,
0.38808346f,
0.39322261f,
0.39829887f,
0.40331461f,
0.40827208f,
0.41317337f,
0.41802047f,
0.42281525f,
0.42755946f,
0.43225479f,
0.43690281f,
0.44150503f,
0.44606285f,
0.45057765f,
0.4550507f,
0.45948322f,
0.46387639f,
0.46823132f,
0.47254906f,
0.47683064f,
0.48107702f,
0.48528913f,
0.48946786f,
0.49361407f,
0.49772858f,
0.50181215f,
0.50586556f,
0.50988952f,
0.51388474f,
0.51785187f,
0.52179157f,
0.52570445f,
0.52959112f,
0.53345216f,
0.53728811f,
0.54109953f,
0.54488692f,
0.54865079f,
0.55239162f,
0.55610989f,
0.55980604f,
0.56348053f,
0.56713377f,
0.57076617f,
0.57437813f,
0.57797005f,
0.5815423f,
0.58509524f,
0.58862922f,
0.5921446f,
0.5956417f,
0.59912085f,
0.60258236f,
0.60602654f,
0.60945369f,
0.61286409f,
0.61625804f,
0.61963579f,
0.62299763f,
0.62634381f,
0.62967459f,
0.63299021f,
0.63629092f,
0.63957694f,
0.64284851f,
0.64610585f,
0.64934918f,
0.65257872f,
0.65579466f,
0.65899722f,
0.66218659f,
0.66536297f,
0.66852654f,
0.67167749f,
0.674816f,
0.67794225f,
0.68105641f,
0.68415864f,
0.68724912f,
0.69032801f,
0.69339546f,
0.69645163f,
0.69949668f,
0.70253074f,
0.70555397f,
0.7085665f,
0.71156849f,
0.71456005f,
0.71754134f,
0.72051248f,
0.72347359f,
0.72642482f,
0.72936627f,
0.73229807f,
0.73522035f,
0.73813321f,
0.74103677f,
0.74393115f,
0.74681645f,
0.74969279f,
0.75256027f,
0.755419f,
0.75826907f,
0.7611106f,
0.76394367f,
0.76676839f,
0.76958485f,
0.77239315f,
0.77519337f,
0.77798562f,
0.78076997f,
0.78354653f,
0.78631536f,
0.78907657f,
0.79183022f,
0.79457642f,
0.79731522f,
0.80004673f,
0.802771f,
0.80548813f,
0.80819818f,
0.81090123f,
0.81359736f,
0.81628664f,
0.81896913f,
0.82164491f,
0.82431405f,
0.82697662f,
0.82963268f,
0.8322823f,
0.83492554f,
0.83756247f,
0.84019315f,
0.84281765f,
0.84543602f,
0.84804833f,
0.85065463f,
0.85325499f,
0.85584945f,
0.85843809f,
0.86102096f,
0.8635981f,
0.86616958f,
0.86873545f,
0.87129576f,
0.87385057f,
0.87639993f,
0.87894389f,
0.8814825f,
0.8840158f,
0.88654386f,
0.88906671f,
0.89158441f,
0.894097f,
0.89660453f,
0.89910704f,
0.90160459f,
0.90409721f,
0.90658495f,
0.90906786f,
0.91154598f,
0.91401934f,
0.916488f,
0.91895199f,
0.92141136f,
0.92386614f,
0.92631638f,
0.92876212f,
0.93120339f,
0.93364024f,
0.9360727f,
0.93850081f,
0.94092461f,
0.94334414f,
0.94575942f,
0.94817051f,
0.95057742f,
0.95298021f,
0.9553789f,
0.95777353f,
0.96016414f,
0.96255075f,
0.9649334f,
0.96731212f,
0.96968695f,
0.97205792f,
0.97442506f,
0.97678841f,
0.97914798f,
0.98150383f,
0.98385596f,
0.98620443f,
0.98854924f,
0.99089045f,
0.99322807f,
0.99556213f,
0.99789267f,
1.00021971f,
1.00254327f,
1.0048634f,
1.00718011f,
1.00949344f,
1.0118034f,
1.01411003f,
1.01641336f,
1.0187134f,
1.02101019f,
1.02330375f,
1.02559411f,
1.0278813f,
1.03016533f,
1.03244623f,
1.03472403f,
1.03699875f,
1.03927042f,
1.04153906f,
1.04380469f,
1.04606734f,
1.04832703f,
1.05058378f,
1.05283762f,
1.05508857f,
1.05733664f,
1.05958188f,
1.06182429f,
1.06406389f,
1.06630072f,
1.06853478f,
1.07076611f,
1.07299472f,
1.07522064f,
1.07744388f,
1.07966446f,
1.08188242f,
1.08409775f,
1.0863105f,
1.08852067f,
1.09072828f,
1.09293336f,
1.09513593f,
1.097336f,
1.09953359f,
1.10172872f,
1.10392142f,
1.10611169f,
1.10829956f,
1.11048505f,
1.11266817f,
1.11484895f,
1.11702739f,
1.11920352f,
1.12137736f,
1.12354892f,
1.12571822f,
1.12788528f,
1.13005012f,
1.13221274f,
1.13437318f,
1.13653144f,
1.13868754f,
1.1408415f,
1.14299333f,
1.14514305f,
1.14729068f,
1.14943624f,
1.15157973f,
1.15372118f,
1.1558606f,
1.157998f,
1.1601334f,
1.16226682f,
1.16439828f,
1.16652777f,
1.16865533f,
1.17078097f,
1.1729047f,
1.17502653f,
1.17714649f,
1.17926458f,
1.18138082f,
1.18349522f,
1.1856078f,
1.18771857f,
1.18982755f,
1.19193475f,
1.19404019f,
1.19614387f,
1.19824581f,
1.20034602f,
1.20244453f,
1.20454134f,
1.20663646f,
1.20872991f,
1.2108217f,
1.21291184f,
1.21500036f,
1.21708725f,
1.21917253f,
1.22125623f,
1.22333834f,
1.22541888f,
1.22749787f,
1.22957531f,
1.23165122f,
1.23372561f,
1.23579849f,
1.23786988f,
1.23993979f,
1.24200823f,
1.2440752f,
1.24614074f,
1.24820483f,
1.2502675f,
1.25232877f,
1.25438863f,
1.2564471f,
1.2585042f,
1.26055993f,
1.26261431f,
1.26466734f,
1.26671904f,
1.26876943f,
1.2708185f,
1.27286628f,
1.27491277f,
1.27695798f,
1.27900193f,
1.28104463f,
1.28308608f,
1.2851263f,
1.28716529f,
1.28920308f,
1.29123966f,
1.29327506f,
1.29530928f,
1.29734232f,
1.29937421f,
1.30140495f,
1.30343455f,
1.30546303f,
1.30749038f,
1.30951663f,
1.31154178f,
1.31356585f,
1.31558884f,
1.31761076f,
1.31963162f,
1.32165144f,
1.32367022f,
1.32568797f,
1.3277047f,
1.32972042f,
1.33173515f,
1.33374889f,
1.33576165f,
1.33777344f,
1.33978426f,
1.34179414f,
1.34380308f,
1.34581108f,
1.34781817f,
1.34982434f,
1.3518296f,
1.35383397f,
1.35583746f,
1.35784007f,
1.35984182f,
1.3618427f,
1.36384274f,
1.36584194f,
1.3678403f,
1.36983785f,
1.37183458f,
1.37383051f,
1.37582565f,
1.37782f,
1.37981357f,
1.38180637f,
1.38379842f,
1.38578971f,
1.38778027f,
1.38977009f,
1.39175918f,
1.39374756f,
1.39573523f,
1.39772221f,
1.39970849f,
1.40169409f,
1.40367902f,
1.40566329f,
1.4076469f,
1.40962986f,
1.41161218f,
1.41359387f,
1.41557494f,
1.4175554f,
1.41953525f,
1.4215145f,
1.42349316f,
1.42547125f,
1.42744876f,
1.4294257f,
1.43140209f,
1.43337794f,
1.43535324f,
1.43732801f,
1.43930226f,
1.44127599f,
1.44324921f,
1.44522194f,
1.44719417f,
1.44916593f,
1.4511372f,
1.45310801f,
1.45507836f,
1.45704826f,
1.45901772f,
1.46098674f,
1.46295533f,
1.4649235f,
1.46689126f,
1.46885862f,
1.47082558f,
1.47279216f,
1.47475835f,
1.47672417f,
1.47868963f,
1.48065473f,
1.48261948f,
1.48458389f,
1.48654797f,
1.48851172f,
1.49047516f,
1.49243828f,
1.4944011f,
1.49636362f,
1.49832586f,
1.50028782f,
1.50224951f,
1.50421093f,
1.5061721f,
1.50813302f,
1.51009369f,
1.51205413f,
1.51401435f,
1.51597435f,
1.51793414f,
1.51989372f,
1.52185311f,
1.52381231f,
1.52577133f,
1.52773018f,
1.52968886f,
1.53164738f,
1.53360576f,
1.53556399f,
1.53752209f,
1.53948005f,
1.5414379f,
1.54339564f,
1.54535327f,
1.5473108f,
1.54926825f,
1.55122561f,
1.55318289f,
1.55514011f,
1.55709727f,
1.55905437f,
1.56101143f,
1.56296846f,
1.56492545f,
1.56688242f,
1.56883938f,
1.57079633f
};



#endif
