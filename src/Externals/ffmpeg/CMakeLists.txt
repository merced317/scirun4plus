CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
IF(COMMAND CMAKE_POLICY)
  CMAKE_POLICY(VERSION 2.6)
ENDIF(COMMAND CMAKE_POLICY)

IF(WIN32)
	IF (CMAKE_SIZEOF_VOID_P MATCHES 8)
		ADD_SUBDIRECTORY(win64)
	ELSE (CMAKE_SIZEOF_VOID_P MATCHES 8)
		ADD_SUBDIRECTORY(win32)
	ENDIF (CMAKE_SIZEOF_VOID_P MATCHES 8)
ELSE(WIN32)
	PROJECT(ffmpeg)
	
	
	# This code is temporary, and awaits a 
	# cleaner solution for building ffmpeg w/ yasm.
	IF(APPLE)
		SET(yasm_dir "mac")
	ELSE(APPLE)
		IF (CMAKE_SIZEOF_VOID_P MATCHES 8)
		   SET(yasm_dir "linux/x64")
		ELSE (CMAKE_SIZEOF_VOID_P MATCHES 8)
		   SET(yasm_dir "linux/x86")
		ENDIF (CMAKE_SIZEOF_VOID_P MATCHES 8)
	ENDIF(APPLE)

	# temporary solution for making sure that yasm is available to ffmpeg
	execute_process(COMMAND cp -f ${CMAKE_CURRENT_SOURCE_DIR}/${yasm_dir}/yasm ${CMAKE_CURRENT_SOURCE_DIR})

	add_custom_target(ffmpeg ALL WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
	set(FFMPEG_INCLUDE ${CMAKE_CURRENT_SOURCE_DIR} CACHE INTERNAL "FFMPEG include directories" FORCE)	
	execute_process(COMMAND ./configure --disable-zlib --disable-bzlib --enable-shared --enable-pic --shlibdir=${CMAKE_LIBRARY_OUTPUT_DIRECTORY} --extra-ldflags="-Wl,-rpath,${CMAKE_LIBRARY_OUTPUT_DIRECTORY}" OUTPUT_QUIET ERROR_QUIET
				WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

	IF(APPLE)
		set(FFMPEG_AVCODEC_SHARED_BASE libavcodec.dylib CACHE INTERNAL "FFPMEG AVCODEC shared library base name." FORCE)
		set(FFMPEG_AVDEVICE_SHARED_BASE libavdevice.dylib CACHE INTERNAL "FFMPEG AVDEVICE shared library base name." FORCE)
		set(FFMPEG_AVFORMAT_SHARED_BASE libavformat.dylib CACHE INTERNAL "FFMPEG AVFORMAT shared library base name." FORCE)
		#set(FFMPEG_AVFILTER_SHARED_BASE libavfilter.dylib CACHE INTERNAL "FFMPEG AVFILTER shared library base name." FORCE)
		set(FFMPEG_AVUTIL_SHARED_BASE libavutil.dylib CACHE INTERNAL "FFMPEG AVUTIL shared library base name." FORCE)
		set(FFMPEG_SWSCALE_SHARED_BASE libswscale.dylib CACHE INTERNAL "FFMPEG SWSCALE shared library base name." FORCE)
	ELSE(APPLE)
		set(FFMPEG_AVCODEC_SHARED_BASE libavcodec.so.52 CACHE INTERNAL "FFPMEG AVCODEC shared library base name." FORCE)
		set(FFMPEG_AVDEVICE_SHARED_BASE libavdevice.so.52 CACHE INTERNAL "FFMPEG AVDEVICE shared library base name." FORCE)
		set(FFMPEG_AVFORMAT_SHARED_BASE libavformat.so.52 CACHE INTERNAL "FFMPEG AVFORMAT shared library base name." FORCE)
		#set(FFMPEG_AVFILTER_SHARED_BASE libavfilter.so.1 CACHE INTERNAL "FFMPEG AVFILTER shared library base name." FORCE)
		set(FFMPEG_AVUTIL_SHARED_BASE libavutil.so.50 CACHE INTERNAL "FFMPEG AVUTIL shared library base name." FORCE)
		set(FFMPEG_SWSCALE_SHARED_BASE libswscale.so.0 CACHE INTERNAL "FFMPEG SWSCALE shared library base name." FORCE)
	ENDIF(APPLE)


	add_custom_command(TARGET ffmpeg COMMAND make WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

	add_custom_command(TARGET ffmpeg
			POST_BUILD 
			COMMAND cp libavcodec/${FFMPEG_AVCODEC_SHARED_BASE} libavdevice/${FFMPEG_AVDEVICE_SHARED_BASE} libavformat/${FFMPEG_AVFORMAT_SHARED_BASE} libavutil/${FFMPEG_AVUTIL_SHARED_BASE} libswscale/${FFMPEG_SWSCALE_SHARED_BASE} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} 
			WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
	)

	set(FFMPEG_AVCODEC_SHARED ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${FFMPEG_AVCODEC_SHARED_BASE} CACHE INTERNAL "FFMPEG AVCODEC Library name" FORCE)
	set(FFMPEG_AVDEVICE_SHARED ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${FFMPEG_AVDEVICE_SHARED_BASE} CACHE INTERNAL "FFMPEG AVDEVICE Library name" FORCE)
	set(FFMPEG_AVFORMAT_SHARED ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${FFMPEG_AVFORMAT_SHARED_BASE} CACHE INTERNAL "FFMPEG AVFORMAT Library name" FORCE)
	#set(FFMPEG_AVFILTER_SHARED ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${FFMPEG_AVFILTER_SHARED_BASE} CACHE INTERNAL "FFMPEG AVFILTER Library name" FORCE)
	set(FFMPEG_AVUTIL_SHARED ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${FFMPEG_AVUTIL_SHARED_BASE} CACHE INTERNAL "FFMPEG AVUTIL Library name" FORCE)
	set(FFMPEG_SWSCALE_SHARED ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${FFMPEG_SWSCALE_SHARED_BASE} CACHE INTERNAL "FFMPEG SWSCALE Library name" FORCE)
	set(FFMPEG_LIBRARIES ${FFMPEG_AVCODEC_SHARED} ${FFMPEG_AVDEVICE_SHARED} ${FFMPEG_AVFORMAT_SHARED} ${FFMPEG_AVUTIL_SHARED} ${FFMPEG_SWSCALE_SHARED} CACHE INTERNAL "FFMPEG Libraries" FORCE)

ENDIF(WIN32)


